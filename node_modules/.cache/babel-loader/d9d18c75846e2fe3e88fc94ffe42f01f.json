{"ast":null,"code":"import _slicedToArray from \"C:\\\\projetos\\\\carrinhocompra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projetos\\\\carrinhocompra\\\\src\\\\pages\\\\Cart\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './styles.css';\nexport default function Cart() {\n  let array = localStorage.getItem('arrayProdutos');\n  array = JSON.parse(array);\n  const qtdTotalItens = localStorage.getItem('qtdTotal');\n\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalValor = _useState2[0],\n      setTotalValor = _useState2[1];\n\n  useEffect(() => {\n    function carregarValor() {\n      array.forEach(function (p) {\n        if (p.qtd > 0) totalValor += p.price * p.qtd;\n      });\n      setTotalValor(totalValor);\n    }\n\n    carregarValor();\n  }, []);\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Produto\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Quantidade\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Valor\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, array.map(p => p.qtd > 0 ? React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, p.title), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, p.qtd), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, p.valor)) : null), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Total\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, qtdTotalItens), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, totalValor)))));\n}","map":{"version":3,"sources":["C:/projetos/carrinhocompra/src/pages/Cart/index.js"],"names":["React","useEffect","useState","Table","TableBody","TableHead","TableCell","TableRow","Paper","Cart","array","localStorage","getItem","JSON","parse","qtdTotalItens","totalValor","setTotalValor","carregarValor","forEach","p","qtd","price","map","title","valor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE3B,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAZ;AACAF,EAAAA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;AACA,QAAMK,aAAa,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB;;AAJ2B,kBAKOV,QAAQ,CAAC,CAAD,CALf;AAAA;AAAA,MAKtBc,UALsB;AAAA,MAKVC,aALU;;AAO3BhB,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASiB,aAAT,GAAyB;AACrBR,MAAAA,KAAK,CAACS,OAAN,CAAc,UAASC,CAAT,EAAY;AACtB,YAAIA,CAAC,CAACC,GAAF,GAAQ,CAAZ,EACIL,UAAU,IAAII,CAAC,CAACE,KAAF,GAAUF,CAAC,CAACC,GAA1B;AACP,OAHD;AAIAJ,MAAAA,aAAa,CAACD,UAAD,CAAb;AACH;;AAEDE,IAAAA,aAAa;AAChB,GAVQ,EAUN,EAVM,CAAT;AAYA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACa,GAAN,CAAUH,CAAC,IACRA,CAAC,CAACC,GAAF,GAAQ,CAAR,GAAY,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,CAAC,CAACI,KAAd,CADQ,EAER,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYJ,CAAC,CAACC,GAAd,CAFQ,EAGR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,CAAC,CAACK,KAAd,CAHQ,CAAZ,GAIc,IALjB,CADL,EAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYV,aAAZ,CAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYC,UAAZ,CAHJ,CARJ,CARJ,CADJ,CADJ;AA2BH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './styles.css';\r\n\r\nexport default function Cart() {\r\n\r\n    let array = localStorage.getItem('arrayProdutos');\r\n    array = JSON.parse(array);\r\n    const qtdTotalItens = localStorage.getItem('qtdTotal');\r\n    let [totalValor, setTotalValor] = useState(0);\r\n\r\n    useEffect(() => {\r\n        function carregarValor() {\r\n            array.forEach(function(p) {\r\n                if (p.qtd > 0)\r\n                    totalValor += p.price * p.qtd\r\n            })\r\n            setTotalValor(totalValor)\r\n        }\r\n\r\n        carregarValor();\r\n    }, []);\r\n\r\n    return (\r\n        <Paper>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Produto</TableCell>\r\n                        <TableCell>Quantidade</TableCell>\r\n                        <TableCell>Valor</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {array.map(p => (\r\n                        p.qtd > 0 ? <TableRow>\r\n                            <TableCell>{p.title}</TableCell>\r\n                            <TableCell>{p.qtd}</TableCell>\r\n                            <TableCell>{p.valor}</TableCell>\r\n                        </TableRow> : null\r\n                    ))}\r\n                    <TableRow>\r\n                        <TableCell>Total</TableCell>\r\n                        <TableCell>{qtdTotalItens}</TableCell>\r\n                        <TableCell>{totalValor}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}